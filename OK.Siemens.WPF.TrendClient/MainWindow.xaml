<Window x:Class="OK.Siemens.WPF.TrendClient.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:lvc="clr-namespace:LiveChartsCore.SkiaSharpView.WPF;assembly=LiveChartsCore.SkiaSharpView.WPF"
        xmlns:local="clr-namespace:OK.Siemens.WPF.TrendClient"
        xmlns:vm = "clr-namespace:OK.Siemens.WPF.TrendClient.ViewModels"
        xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:models="clr-namespace:OK.Siemens.Models;assembly=OK.Siemens.Models"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance {x:Type vm:MainWindowViewModel}, IsDesignTimeCreatable=True}"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto"
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{DynamicResource MaterialDesignFont}"
        Title="MainWindow" Height="800" Width="1200">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    </Window.Resources>
    <Grid>
        <!-- Add category dialog -->
        <md:DialogHost DialogTheme="Inherit" 
                       IsOpen="{Binding IsDialogAddCategoryVisible}">
            <md:DialogHost.DialogContent>
                <StackPanel>
                    <!-- Content -->
                    <StackPanel Margin="16" 
                                Visibility="{Binding Path=!IsCategoryLoading,
                                Converter={StaticResource BooleanToVisibilityConverter}}"
                                >
                        <!-- Label -->
                        <TextBlock Text="Add new category"/>
                        <!-- Input field -->
                        <TextBox Margin="0 10 0 0"
                                 Text="{Binding CategoryName}"></TextBox>
                        <!-- Buttons -->
                        <StackPanel Orientation="Horizontal"
                                    Margin="0 10 0 0">
                            <!-- Add Category -->
                            <Button Style="{StaticResource MaterialDesignFlatButton}"
                                    Command="{Binding AddCategoryCommand}"
                                    Content="ADD" />
                            <!-- Cancell -->
                            <Button Style="{StaticResource MaterialDesignFlatButton}"
                                    Command="{Binding CancelAddCategoryCommand}"
                                    Content="CANCEL" />
                        </StackPanel>
                    </StackPanel>
                    <!-- Loading indicator -->
                    <StackPanel Visibility="{Binding IsCategoryLoading, 
                                Converter={StaticResource BooleanToVisibilityConverter}}">
                        <TextBlock Text="Loading ..." />
                        <ProgressBar IsIndeterminate="True" />
                    </StackPanel>
                </StackPanel>
            </md:DialogHost.DialogContent>
            <!-- Main window content -->
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="300"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="32"></RowDefinition>
                </Grid.RowDefinitions>
                <StackPanel Orientation="Horizontal">
                    <!-- Start getting data -->
                    <Button Margin="10 10 0 0 " Content="Start" />
                    <!-- Stop getting data -->
                    <Button Margin="10 10  0 0 " Content="Stop"/>
                </StackPanel>
                <DockPanel Grid.Row="2" Grid.Column="0" Grid.RowSpan="2"
                           VerticalAlignment="Stretch">
                    <!-- Date time -->
                    <TextBox DockPanel.Dock="Top"
                               Margin="10 10 0 0"
                               Text="{Binding DateTimeStart,
                        StringFormat={}{0:yyyy-MM-dd HH:mm:ss}}" />
                    <TextBox DockPanel.Dock="Top"
                             Margin="10 10 0 0"
                             Text="{Binding DateTimeEnd,
                        StringFormat={}{0:yyyy-MM-dd HH:mm:ss}}" />
                    <!-- Add Category-->
                    <Button DockPanel.Dock="Top"
                            Margin="10 10 0 0"
                            Command="{Binding OpenAddCategoryWindowCommand}">
                        Add Category
                    </Button>
                    <!-- Categories tree view -->
                    <TreeView Height="Auto" Margin="10 10 0 5"
                              ItemsSource="{Binding Categories}"
                              AllowDrop="True">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseDoubleClick">
                                <i:InvokeCommandAction
                                    Command="{Binding DataContext.AddPenCommand, 
                                    RelativeSource={RelativeSource FindAncestor, 
                                    AncestorType={x:Type Window}}}" 
                                    PassEventArgsToCommand="True"/>
                            </i:EventTrigger>
                            <i:EventTrigger EventName="SelectedItemChanged">
                                <i:InvokeCommandAction Command="{Binding SelectedItemChangedCommand}"
                                                       PassEventArgsToCommand="True"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <TreeView.ItemTemplate>
                            <HierarchicalDataTemplate ItemsSource="{Binding Tags}">
                                <TextBlock Text="{Binding Name}" />
                                <HierarchicalDataTemplate.ItemTemplate>
                                    <DataTemplate DataType="{x:Type models:PlcTag}">
                                        <TextBlock Text="{Binding TagName}"/>
                                    </DataTemplate>
                                </HierarchicalDataTemplate.ItemTemplate>
                            </HierarchicalDataTemplate>
                        </TreeView.ItemTemplate>
                    </TreeView>
                </DockPanel>
                <!-- Charts -->
                <lvc:CartesianChart Grid.Column="1" Grid.Row="0" Grid.RowSpan="3"
                                    Margin="10"
                                    Background="{DynamicResource MaterialDesignDivider}"
                                    Series="{Binding Series}"
                                    XAxes="{Binding XAxes}" 
                                    EasingFunction="{x:Null}"/>
                <!-- Pens - items to be placed on a trend -->
                <ListView Grid.Row="3" Grid.Column="1" 
                          MinHeight="120"
                          Margin="10 0 0 0"
                          ItemsSource="{Binding PensCollection}"
                          SelectedItem="{Binding SelectedPen}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseDoubleClick">
                            <i:InvokeCommandAction Command="{Binding RemovePenCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock 
                                    Text="{Binding Id}">
                                    <!-- <i:Interaction.Triggers> -->
                                    <!--     <i:EventTrigger EventName="MouseDoubleClick"> -->
                                    <!--         <i:InvokeCommandAction Command="{Binding DataContext.RemovePenCommand,  -->
                                    <!--     RelativeSource={RelativeSource FindAncestor,  -->
                                    <!--     AncestorType={x:Type Window}}}" -->
                                    <!--                                CommandParameter="{Binding Tag}"/> -->
                                    <!--     </i:EventTrigger> -->
                                    <!-- </i:Interaction.Triggers> -->
                                </TextBlock>
                                <TextBlock Margin="10 0 0 0" 
                                    Text="{Binding Tag.TagName}" />
                                <!-- <TextBlock Margin="10 0 0 0"  -->
                                <!--            Text="{Binding DataContext.,  -->
                                <!--            RelativeSource={RelativeSource FindAncestor,  -->
                                <!--            AncestorType={x:Type Window}}}" /> -->
                            </StackPanel>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListView>
                <!-- Status bar --> 
                <StatusBar Grid.Column="0" Grid.Row="4" Grid.ColumnSpan="2">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Margin="10 0 0 0" Text="Data collection length: "/>
                        <TextBlock Text="{Binding ChartItemsCount}"/>
                    </StackPanel>
                </StatusBar>
            </Grid>
        </md:DialogHost>
    </Grid>
</Window>
